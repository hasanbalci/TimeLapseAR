% firstImage = imread(strcat('Building/image2.jpg'));
% videoFReader = vision.VideoFileReader('ResultVideos/Chair720ResultOnline.avi', 'VideoOutputDataType', 'uint8');
% firstImage = step(videoFReader);
% energyWindow = energyRGB(firstImage);
% imshow(energyWindow);
% imshow(firstImage);

% i=1;
% while ~isDone(videoFReader)
%     firstImage = step(videoFReader);
%     lastImage = firstImage(42:627,162:1201,1:3);
%     imwrite(lastImage, strcat('ChairResultFramesOnline/image', num2str(i), '.bmp'));
%     i = i+1;
% end



outputVideo = VideoWriter('ResultVideos/Chair720ResultOnlineFinal.avi');
outputVideo.FrameRate = 30;
open(outputVideo);

for ii = 1:601
   img = imread(strcat('ChairResultFramesOnline/image', num2str(ii), '.bmp'));
   writeVideo(outputVideo,img)
end

close(outputVideo);


% a = [5,7,12,4,15,5,10,13,4,18,12];
% b = smooth(a);
% plot(1:11, a, 'r-', 1:11, b,'b-');












% A = imread('sundial', 'jpg');
% B = rgb2gray(A);
% imwrite(B, 'sundialGrayscale.jpg');
% energyWindow = energyRGB(firstImage);
% imwrite(energyWindow, 'chairEnergy.jpg');
% imshow(energyWindow);
% startPixel = [38, 156];     % startPixel will be decided by calling a function which processes shadow boundaries
% trackingWindow = firstImage(250:359,360:529,1:3);      % tracking window will be generated by using the startPixel and shadow boundary information
% 
% firstImage = imread(strcat('Chair720/image1.jpg'));
% startPixel = [43, 332];     % startPixel will be decided by calling a function which processes shadow boundaries
% trackingWindow = firstImage(530:719,700:1039,1:3);      % tracking window will be generated by using the startPixel and shadow boundary information
% % Here, startPixel will take a new value according to tracking window
% energyWindow = energyRGB(trackingWindow);
% previousStartPixelValue = energyWindow(startPixel(1,1),startPixel(1,2));
% a = [2,234,210,25,123;255,255,196,19,142;255,255,67,5,109;122,108,16,9,117;11,44,63,18,74];
% b = centerOfMass(a)

% findSearchArea2 = {[4 5 7 8];
%      [1 2 4 5];
%      [2 3 5 6];
%      [5 6 8 9]};
%  
% A = magic(3);
% A(findSearchArea2{1})=0;
% [maxVal, maxIn] = max(A(:))
% 
% [R,C] = ind2sub(size(A),maxIn)



